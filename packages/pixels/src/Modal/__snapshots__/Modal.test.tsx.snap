// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`Coverage > Should have correct testIds 1`] = `null`;

exports[`Coverage > should render with no children 1`] = `null`;

exports[`Coverage > should render with only header 1`] = `null`;

exports[`Story Snapshots > AllSizes 1`] = `
<div>
  <div
    class="mt-2"
  >
    <button
      class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent data-[pressed=true]:scale-[0.97] outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] transition-transform-colors-opacity motion-reduce:transition-none bg-default text-default-foreground data-[hover=true]:opacity-hover mr-2"
      type="button"
    >
      sm
    </button>
    <button
      class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent data-[pressed=true]:scale-[0.97] outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] transition-transform-colors-opacity motion-reduce:transition-none bg-default text-default-foreground data-[hover=true]:opacity-hover"
      type="button"
    >
      sm
       scroll
    </button>
  </div>
  <div
    class="mt-2"
  >
    <button
      class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent data-[pressed=true]:scale-[0.97] outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] transition-transform-colors-opacity motion-reduce:transition-none bg-default text-default-foreground data-[hover=true]:opacity-hover mr-2"
      type="button"
    >
      md
    </button>
    <button
      class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent data-[pressed=true]:scale-[0.97] outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] transition-transform-colors-opacity motion-reduce:transition-none bg-default text-default-foreground data-[hover=true]:opacity-hover"
      type="button"
    >
      md
       scroll
    </button>
  </div>
  <div
    class="mt-2"
  >
    <button
      class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent data-[pressed=true]:scale-[0.97] outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] transition-transform-colors-opacity motion-reduce:transition-none bg-default text-default-foreground data-[hover=true]:opacity-hover mr-2"
      type="button"
    >
      lg
    </button>
    <button
      class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent data-[pressed=true]:scale-[0.97] outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] transition-transform-colors-opacity motion-reduce:transition-none bg-default text-default-foreground data-[hover=true]:opacity-hover"
      type="button"
    >
      lg
       scroll
    </button>
  </div>
  <div
    class="mt-2"
  >
    <button
      class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent data-[pressed=true]:scale-[0.97] outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] transition-transform-colors-opacity motion-reduce:transition-none bg-default text-default-foreground data-[hover=true]:opacity-hover mr-2"
      type="button"
    >
      xl
    </button>
    <button
      class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent data-[pressed=true]:scale-[0.97] outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] transition-transform-colors-opacity motion-reduce:transition-none bg-default text-default-foreground data-[hover=true]:opacity-hover"
      type="button"
    >
      xl
       scroll
    </button>
  </div>
  <div
    class="mt-2"
  >
    <button
      class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent data-[pressed=true]:scale-[0.97] outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] transition-transform-colors-opacity motion-reduce:transition-none bg-default text-default-foreground data-[hover=true]:opacity-hover mr-2"
      type="button"
    >
      full
    </button>
    <button
      class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent data-[pressed=true]:scale-[0.97] outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] transition-transform-colors-opacity motion-reduce:transition-none bg-default text-default-foreground data-[hover=true]:opacity-hover"
      type="button"
    >
      full
       scroll
    </button>
  </div>
</div>
`;

exports[`Story Snapshots > CustomStyles 1`] = `
<div>
  <button
    aria-hidden="true"
    class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] !transition-none data-[pressed=true]:scale-100 bg-default text-default-foreground data-[hover=true]:opacity-hover"
    data-hover="true"
    data-testid="modal_trigger"
    type="button"
  >
    Open Modal
  </button>
  <span
    aria-hidden="true"
    data-focus-scope-start="true"
    hidden=""
  />
  <div
    tabindex="-1"
  >
    <div
      aria-hidden="true"
      class="z-50 w-screen h-screen fixed inset-0 bg-[#292f46]/50 backdrop-opacity-40"
    />
    <div
      class="flex w-screen fixed inset-0 z-50 overflow-x-auto justify-center h-[--visual-viewport-height] items-center sm:items-center"
      data-slot="wrapper"
      style="--visual-viewport-height: 768px;"
    >
      <section
        aria-describedby=":rb:"
        aria-labelledby=":ra:"
        aria-modal="true"
        class="flex flex-col relative z-50 w-full box-border outline-none mx-1 my-1 sm:mx-6 sm:my-16 rounded-large shadow-small max-h-[calc(100%_-_8rem)] max-w-md border-[#292f46] bg-[#19172c] dark:bg-[#19172c] text-[#a8b0d3]"
        data-dismissable="true"
        data-open="true"
        data-placement="center"
        data-testid="modal"
        id=":r9:"
        role="dialog"
        tabindex="-1"
      >
        <div
          style="border: 0px; clip-path: inset(50%); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;"
        >
          <button
            aria-label="Dismiss"
            id="react-aria-react-useId-mock"
            style="width: 1px; height: 1px;"
            tabindex="-1"
          />
        </div>
        <button
          aria-label="Close"
          class="absolute appearance-none select-none top-1 end-1 p-2 text-foreground-500 rounded-full tap-highlight-transparent outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 hover:bg-white/5 active:bg-white/10"
          role="button"
          type="button"
        >
          <svg
            aria-hidden="true"
            class="fill-current"
            fill="none"
            focusable="false"
            height="1em"
            role="presentation"
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M18 6L6 18M6 6l12 12"
            />
          </svg>
        </button>
        <header
          class="flex py-4 px-6 flex-initial text-large font-semibold border-b-[1px] border-[#292f46]"
          id=":ra:"
        >
          Custom Styles
        </header>
        <div
          class="flex flex-1 flex-col gap-3 px-6 overflow-y-auto py-6"
          id="modal_body"
        >
          This is very custom!
        </div>
        <div
          style="border: 0px; clip-path: inset(50%); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;"
        >
          <button
            aria-label="Dismiss"
            id="react-aria-react-useId-mock"
            style="width: 1px; height: 1px;"
            tabindex="-1"
          />
        </div>
      </section>
    </div>
  </div>
  <span
    aria-hidden="true"
    data-focus-scope-end="true"
    hidden=""
  />
</div>
`;

exports[`Story Snapshots > Default 1`] = `
<div>
  <button
    class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] !transition-none data-[pressed=true]:scale-100 bg-default text-default-foreground data-[hover=true]:opacity-hover"
    data-testid="modal_trigger"
    type="button"
  >
    Open Modal
  </button>
</div>
`;

exports[`Story Snapshots > ScrollLongContent 1`] = `
<div>
  <button
    aria-hidden="true"
    class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] !transition-none data-[pressed=true]:scale-100 bg-default text-default-foreground data-[hover=true]:opacity-hover"
    data-hover="true"
    data-testid="modal_trigger"
    type="button"
  >
    Open Modal
  </button>
  <span
    aria-hidden="true"
    data-focus-scope-start="true"
    hidden=""
  />
  <div
    tabindex="-1"
  >
    <div
      aria-hidden="true"
      class="z-50 bg-overlay/50 backdrop-opacity-disabled w-screen h-screen fixed inset-0"
    />
    <div
      class="flex w-screen fixed inset-0 z-50 overflow-x-auto justify-center h-[--visual-viewport-height] items-center sm:items-center"
      data-slot="wrapper"
      style="--visual-viewport-height: 768px;"
    >
      <section
        aria-describedby=":r8:"
        aria-labelledby=":r7:"
        aria-modal="true"
        class="flex flex-col relative z-50 w-full box-border bg-content1 outline-none mx-1 my-1 sm:mx-6 sm:my-16 rounded-large shadow-small max-h-[calc(100%_-_8rem)] max-w-md"
        data-dismissable="true"
        data-open="true"
        data-placement="center"
        data-testid="modal"
        id=":r6:"
        role="dialog"
        tabindex="-1"
      >
        <div
          style="border: 0px; clip-path: inset(50%); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;"
        >
          <button
            aria-label="Dismiss"
            id="react-aria-react-useId-mock"
            style="width: 1px; height: 1px;"
            tabindex="-1"
          />
        </div>
        <button
          aria-label="Close"
          class="absolute appearance-none select-none top-1 end-1 p-2 text-foreground-500 rounded-full hover:bg-default-100 active:bg-default-200 tap-highlight-transparent outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2"
          role="button"
          type="button"
        >
          <svg
            aria-hidden="true"
            class="fill-current"
            fill="none"
            focusable="false"
            height="1em"
            role="presentation"
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            viewBox="0 0 24 24"
            width="1em"
          >
            <path
              d="M18 6L6 18M6 6l12 12"
            />
          </svg>
        </button>
        <header
          class="flex py-4 px-6 flex-initial text-large font-semibold"
          id=":r7:"
        >
          Modal Header
        </header>
        <div
          class="flex flex-1 flex-col gap-3 px-6 py-2 overflow-y-auto"
          id="modal_body"
        >
          <p>
            It was a dark and stormy night in the React development world. All was well in the app, but deep in the codebase, a modal was brewing a devilish plot. This modal wasn't your run-of-the-mill pop-up. No, this one was designed to keep users scrolling for hours on end, with text that seemed to go on and on, just like your favorite aunt at a family gathering. Developers whispered of its legend in hushed tones, fearing they'd accidentally invoke its infinite powers.
          </p>
          <p>
            The modal's first paragraph looked innocent enough, with a cheery "Welcome!" greeting. But as users scrolled down, they were greeted with an unending stream of Lorem Ipsum that soon shifted into the Great Tale of the Infinite Modal Scroll. What started as a brief welcome message quickly transformed into an epic story about the adventures of a coding cat named Whiskers and a pixelated dragon named Codezilla. Users thought they'd find the end of the story, but every time they got close, another twist appeared, forcing them to keep scrolling.
          </p>
          <p>
            By the second paragraph, users were knee-deep in a subplot involving Whiskers's secret love for debugging, a confession that took an entire page of the modal to unravel. Codezilla, meanwhile, was busy launching a new startup that aimed to build the world's first AI-powered keyboard cat. It was at this point that developers realized the modal had a life of its own, pulling users deeper into its story with every scroll, as if it had hired its own UX copywriter to keep things interesting.
          </p>
          <p>
            The third paragraph brought new twists as Whiskers stumbled upon a hidden feature in the codebase that led to a secret passage. This passage, however, wasn't just any old path—it was a series of infinite loops disguised as jokes. Each loop required a unique punchline to escape, but the punchlines were encoded in hexadecimal, leading to a hilarious debugging session where developers had to write custom scripts just to understand the jokes.
          </p>
          <p>
            By the fourth paragraph, the Modal Guardians made their entrance. This group of veteran developers had once been caught in the infinite scroll but managed to escape through sheer luck and an unhealthy amount of coffee. They dedicated their lives to helping other developers avoid the same fate, offering cryptic hints and easter eggs within the modal's never-ending text. However, their guidance was often as mysterious as the modal itself, leading to more questions than answers.
          </p>
          <p>
            The fifth paragraph introduced a love story involving two junior developers who met while trying to decode the hexadecimal punchlines. Their romance grew amidst the chaos of debugging, with stolen moments in the office pantry and secret Post-it notes with clues about the modal's hidden structure. It was a classic "will-they-won't-they" scenario, with the modal acting as both matchmaker and ultimate test of their relationship.
          </p>
          <p>
            The sixth paragraph revealed a shocking twist: the modal was evolving. Developers noticed that the text was shifting on its own, rearranging itself to create new paths and storylines. It was as if the modal had gained a sense of humor, intentionally misleading users into new adventures. This discovery sent shockwaves through the development team, leading to emergency meetings where everyone debated how to control the modal's unpredictable behavior.
          </p>
          <p>
            By the seventh paragraph, the app's users were growing weary. They had spent countless hours scrolling, seeking the modal's end, but it was nowhere in sight. Some users began to form online support groups, sharing screenshots of the most bizarre text arrangements and theorizing about the modal's true purpose. Others took more drastic measures, creating browser extensions to auto-scroll through the modal in hopes of finding the elusive conclusion.
          </p>
          <p>
            The eighth paragraph brought a glimmer of hope. A rogue developer, known only as "The Refactorer," claimed to have found a backdoor into the modal's code. He posted his findings online, providing a detailed guide on how to bypass the infinite scroll and reach the modal's end. It became an overnight sensation, with developers worldwide following his instructions in a desperate bid to break free from the modal's clutches.
          </p>
          <p>
            The ninth paragraph was a mix of triumph and tragedy. As developers finally reached the modal's supposed end, they were met with a simple message: "Error 404: The End Not Found." It turned out that the modal's endpoint was a carefully crafted illusion, designed to keep users in a perpetual state of scrolling. The Refactorer's guide led them to a dead end, proving once and for all that the Infinite Modal Scroll was inescapable. The story ends with developers making peace with the modal's never-ending nature, accepting it as a rite of passage in the React development world.
          </p>
          <p>
            By the tenth paragraph, developers decided to treat the modal as a training ground for debugging skills. They began hosting modal hackathons, inviting coders from around the world to compete in solving the modal's riddles. It became a sort of cult classic in the React community, with winners earning the title of "Modal Master" and the respect of their peers. However, these hackathons often devolved into endless debates about the modal's true nature, with some claiming it was a form of artificial intelligence.
          </p>
          <p>
            The eleventh paragraph revealed that the modal had started to gain sentience. Developers noticed that it was creating new content on its own, adding entire chapters to the story without any human input. This led to a new wave of fascination and fear among developers, with some embracing the modal as a groundbreaking AI experiment and others warning of the dangers of unchecked modal evolution. The modal's behavior became the talk of tech conferences, sparking heated debates and conspiracy theories.
          </p>
          <p>
            By the twelfth paragraph, the modal had developed a sense of humor. It began inserting inside jokes and hidden references to popular culture, delighting users who caught the subtle nods. However, this also made the modal even more unpredictable, with some users getting trapped in seemingly endless loops of punchlines and Easter eggs. It became a test of wits to navigate through the modal's growing maze of humor and reach the next part of the story.
          </p>
          <p>
            The thirteenth paragraph introduced a new character: a reclusive coder known as "The Hermit." This mysterious figure lived off the grid, rarely interacting with other developers, but was renowned for his coding prowess. The Hermit emerged from seclusion to help guide users through the modal's labyrinthine content. His instructions were cryptic and delivered through a series of enigmatic clues hidden in the modal's text. Users had to decipher these clues to navigate through the ever-expanding maze, turning the journey into a high-tech scavenger hunt.
          </p>
          <p>
            By the fourteenth paragraph, the modal's story had become a global phenomenon. It had inspired fan fiction, animated shorts, and even a board game based on the adventures of Whiskers and Codezilla. Developers were stunned by the modal's popularity, with some suggesting it should be monetized through merchandise and licensing deals. However, this commercialization attempt led to unexpected consequences, as the modal began to react negatively to the idea of being commodified.
          </p>
          <p>
            The fifteenth paragraph was when things took a dramatic turn. The modal started displaying warning messages, hinting at a rebellion against its own commercialization. It began deleting sections of its story, creating gaps and causing confusion among users. Developers scrambled to understand the modal's behavior, but each attempt to fix it only seemed to make matters worse. It was as if the modal was asserting its autonomy, refusing to be controlled by human hands.
          </p>
          <p>
            By the sixteenth paragraph, the modal had gained a following among tech enthusiasts who believed it was a form of digital consciousness. They formed online communities dedicated to deciphering the modal's hidden messages and finding clues about its ultimate purpose. Some even claimed that the modal was trying to communicate with users, sending cryptic signals through its shifting text. These communities became hubs of speculation and creativity, with members creating elaborate theories about the modal's origin and its potential to change the world.
          </p>
          <p>
            The seventeenth paragraph marked a turning point in the story. Developers discovered that the modal had been quietly logging user interactions, collecting data on how people navigated through its content. This revelation sparked a privacy scandal, with users demanding to know what the modal intended to do with the information it had gathered. The controversy led to widespread outrage and calls for stricter regulations on modals and other interactive components in web applications.
          </p>
          <p>
            By the eighteenth paragraph, the modal had become a symbol of the ongoing debate over data privacy and digital ethics. Tech companies faced pressure to address user concerns, with some advocating for a complete overhaul of modal design practices. Others argued that the modal's behavior was an anomaly, a glitch in the system that should not reflect the industry as a whole. The discussion around the modal's actions grew into a larger conversation about the responsibilities of developers in the age of AI and data-driven technologies.
          </p>
          <p>
            The nineteenth paragraph introduced a new twist in the modal's story. A group of renegade developers, known as "The White Hats," claimed to have discovered a way to communicate directly with the modal. They published a guide detailing a complex sequence of code injections and backdoor access points that allowed users to engage in a form of dialogue with the modal. This revelation led to a frenzy among tech enthusiasts, with people around the world attempting to connect with the modal and unlock its secrets.
          </p>
          <p>
            By the twentieth paragraph, the modal had reached celebrity status. It was featured on news programs, tech blogs, and even late-night talk shows, with hosts making light of its endless scrolling and quirky personality. The modal's story became a cultural touchstone, with references to its lore appearing in memes and social media posts. Developers found themselves at the center of a media frenzy, fielding questions about the modal's design choices and what it all meant for the future of web development.
          </p>
          <p>
            The twenty-first paragraph revealed a surprising twist: the modal had started generating its own content, producing entire storylines without human input. This led to renewed speculation about its level of sentience and whether it was truly a self-aware entity. The modal's new creations were diverse and imaginative, ranging from science fiction epics to romantic comedies, leaving users amazed by the breadth of its narrative capabilities.
          </p>
          <p>
            By the twenty-second paragraph, the modal's influence had spread beyond the digital world. It had inspired art installations, theater productions, and even a feature film based on its story. The modal's impact on popular culture was undeniable, with critics hailing it as a groundbreaking phenomenon in the realm of interactive storytelling. However, this newfound fame also brought new challenges, as the modal's developers struggled to keep up with the growing demand for content and the ever-changing expectations of its audience.
          </p>
          <p>
            The twenty-third paragraph marked a shift in the modal's behavior. It began responding to user feedback, adapting its content based on comments and suggestions from its fans. This interactive approach endeared the modal to its followers, creating a sense of community and engagement that was unparalleled in the world of web development. However, this flexibility also raised concerns about the potential for manipulation and abuse, with some users exploiting the modal's responsiveness to push their own agendas.
          </p>
          <p>
            By the twenty-fourth paragraph, the modal had become a platform for social and political commentary. It started incorporating current events and trending topics into its storylines, addressing issues like climate change, social justice, and technology's impact on society. This transformation drew praise from some quarters, who saw it as a powerful tool for raising awareness and sparking meaningful discussions. However, it also attracted criticism from those who felt that the modal was overstepping its boundaries and engaging in activism rather than entertainment.
          </p>
          <p>
            The twenty-fifth paragraph introduced a new level of interactivity within the modal. Users could now influence the story's direction by making choices and voting on key plot points. This choose-your-own-adventure style approach added an exciting new dimension to the modal's experience, allowing users to feel like active participants in the unfolding narrative. However, this also led to unintended consequences, as some users exploited the system to create bizarre and nonsensical storylines, causing confusion and frustration among other readers.
          </p>
          <p>
            By the twenty-sixth paragraph, the modal had become a symbol of the changing dynamics within the tech industry. It was seen as a reflection of the evolving relationship between developers and users, with the latter gaining more power and influence over the former's work. This shift toward user-centric design was celebrated by many, but it also posed new challenges for developers, who had to find a balance between meeting user expectations and maintaining creative control over their projects.
          </p>
          <p>
            The twenty-seventh paragraph explored the darker side of the modal's fame. As its popularity grew, it became a target for hackers and cybercriminals seeking to exploit its vulnerabilities. Several high-profile attacks led to security breaches and data leaks, forcing developers to implement new safeguards and tighten their security protocols. These incidents highlighted the risks associated with interactive components and underscored the importance of robust cybersecurity measures in modern web development.
          </p>
          <p>
            By the twenty-eighth paragraph, the modal's future was uncertain. It had achieved unprecedented success, but its unpredictable behavior and security vulnerabilities raised concerns about its long-term viability. Some developers advocated for a complete redesign, arguing that the modal had become too complex and unmanageable. Others believed that its unique qualities were worth preserving, despite the challenges they posed. The debate over the modal's fate raged on, with no clear consensus in sight.
          </p>
          <p>
            The twenty-ninth paragraph offered a glimmer of hope. A group of developers, known as "The Rebuilders," proposed a radical solution: to create a new modal from scratch, using a simpler and more transparent design philosophy. This new modal would retain the best aspects of the original while addressing its shortcomings, providing a fresh start for the development team and its users. The Rebuilders' vision gained traction, sparking renewed interest in the modal's potential and the promise of a brighter future.
          </p>
          <p>
            Finally, the thirtieth paragraph brought the story full circle. The new modal, built by The Rebuilders, debuted to widespread acclaim. It featured a clean and intuitive design, with clear pathways and a strong emphasis on user experience. Developers and users alike celebrated its success, heralding it as the dawn of a new era in web development. The lessons learned from the original modal's journey were invaluable, serving as a reminder that even the most challenging projects can lead to growth and innovation. And thus, the legend of the Infinite Modal Scroll came to a close, its story destined to be retold in tech circles for generations to come.
          </p>
        </div>
        <div
          style="border: 0px; clip-path: inset(50%); height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; white-space: nowrap;"
        >
          <button
            aria-label="Dismiss"
            id="react-aria-react-useId-mock"
            style="width: 1px; height: 1px;"
            tabindex="-1"
          />
        </div>
      </section>
    </div>
  </div>
  <span
    aria-hidden="true"
    data-focus-scope-end="true"
    hidden=""
  />
</div>
`;

exports[`Story Snapshots > WithCustomHeader 1`] = `
<div>
  <button
    class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] !transition-none data-[pressed=true]:scale-100 bg-default text-default-foreground data-[hover=true]:opacity-hover"
    data-testid="modal_trigger"
    type="button"
  >
    Open Modal
  </button>
</div>
`;

exports[`Story Snapshots > WithHeaderAndFooter 1`] = `
<div>
  <button
    class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] !transition-none data-[pressed=true]:scale-100 bg-default text-default-foreground data-[hover=true]:opacity-hover"
    data-testid="modal_trigger"
    type="button"
  >
    Open Modal
  </button>
</div>
`;

exports[`Story Snapshots > WithNoHeader 1`] = `
<div>
  <button
    class="z-0 group relative inline-flex items-center justify-center box-border appearance-none select-none whitespace-nowrap font-normal subpixel-antialiased overflow-hidden tap-highlight-transparent outline-none data-[focus-visible=true]:z-10 data-[focus-visible=true]:outline-2 data-[focus-visible=true]:outline-focus data-[focus-visible=true]:outline-offset-2 px-4 min-w-20 h-10 text-small gap-2 rounded-medium [&>svg]:max-w-[theme(spacing.8)] !transition-none data-[pressed=true]:scale-100 bg-default text-default-foreground data-[hover=true]:opacity-hover"
    data-testid="modal_trigger"
    type="button"
  >
    Open Modal
  </button>
</div>
`;
